kubernetesClusterDomain: cluster.local
ldap:
  ports:
  - name: ldap-insecure
    port: 389
    protocol: TCP
    targetPort: 389
  type: ClusterIP
ldapDeployment:
  ldapService:
    args:
    - --copy-service
    - --loglevel
    - debug
    env:
      ldapAdminPassword: admin
      ldapBaseDn: dc=parodos,dc=dev
      ldapConfigPassword: config
      ldapDomain: parodos.dev
      ldapLogLevel: "256"
      ldapOrganisation: parodos
      ldapPort: "389"
      ldapSeedInternalLdifPath: /ldif
      ldapTlsCrtFilename: tls.crt
      ldapTlsKeyFilename: tls.key
      springProfilesActive: local
    image:
      repository: osixia/openldap
      tag: 1.5.0
ldifConfigTd2H4849H2:
  testServerLdif: |-
    # LDIF Export for dc=parodos,dc=dev
    # Server: openldap (openldap)
    # Search Scope: sub
    # Search Filter: (objectClass=*)
    # Total Entries: 8
    #
    # Generated by phpLDAPadmin (http://phpldapadmin.sourceforge.net) on March 6, 2023 9:46 am
    # Version: 1.2.5
    version: 1
    # Entry 2: cn=user-ro,dc=parodos,dc=dev
    dn: cn=user-ro,dc=parodos,dc=dev
    cn: user-ro
    description: LDAP read only user
    objectclass: simpleSecurityObject
    objectclass: organizationalRole
    userpassword: {SSHA}4E5Aa0TUb20Mu/+LUKReQvZeEQ6/bt5G
    # Entry 3: ou=groups,dc=parodos,dc=dev
    dn: ou=groups,dc=parodos,dc=dev
    objectclass: top
    objectclass: organizationalUnit
    ou: groups
    # Entry 4: ou=subgroups,ou=groups,dc=parodos,dc=dev
    dn: ou=subgroups,ou=groups,dc=parodos,dc=dev
    objectclass: top
    objectclass: organizationalUnit
    ou: subgroups
    # Entry 5: ou=people,dc=parodos,dc=dev
    dn: ou=people,dc=parodos,dc=dev
    objectclass: top
    objectclass: organizationalUnit
    ou: people
    # Entry 6: uid=ben,ou=people,dc=parodos,dc=dev
    dn: uid=ben,ou=people,dc=parodos,dc=dev
    cn: Ben Alex
    objectclass: top
    objectclass: person
    objectclass: organizationalPerson
    objectclass: inetOrgPerson
    sn: Alex
    uid: ben
    userpassword: $2a$10$c6bSeWPhg06xB1lvmaWNNe4NROmZiSpYhlocU/98HNr2MhIOiSt36
    # Entry 7: uid=test,ou=people,dc=parodos,dc=dev
    dn: uid=test,ou=people,dc=parodos,dc=dev
    cn: Test
    objectclass: top
    objectclass: person
    objectclass: organizationalPerson
    objectclass: inetOrgPerson
    sn: test
    uid: test
    userpassword: $2a$10$SeVolYcPl3zJJbq.ox9U0ug7fo624hpT49O7FjvCNH2Us5HQRuvBe
notificationService:
  notificationService:
    image:
      repository: quay.io/parodos-dev/notification-service
      tag: test
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
notificationServiceConfig:
  springProfilesActive: local
postgres:
  ports:
  - name: insecure
    port: 5432
    protocol: TCP
    targetPort: 5432
  type: ClusterIP
postgresDeployment:
  postgresService:
    image:
      repository: docker.io/postgres
      tag: "15.2"
postgresServiceConfig:
  postgresDb: parodos
  postgresPassword: parodos
  postgresUser: parodos
workflowService:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
  workflowService:
    image:
      repository: quay.io/parodos-dev/workflow-service
      tag: test
    imagePullPolicy: IfNotPresent
workflowServiceConfig:
  datasourceDriver: org.postgresql.Driver
  datasourcePassword: parodos
  datasourceUrl: jdbc:postgresql://postgres:5432/parodos
  datasourceUsername: parodos
  notificationServerUrl: http://notification-service.default.svc.cluster.local:8080
  springProfilesActive: dev
