appConfig4Gh2B9Ghf4:
  appConfigYaml: |-
    app:
      title: Scaffolded Backstage App
      baseUrl: http://0.0.0.0:3000
    parodos:
      workflows:
        assessment: 'onboardingAssessment_ASSESSMENT_WORKFLOW'
      pollingInterval: 10000
    organization:
      name: My Company
    backend:
      # Used for enabling authentication, secret is shared by all backend plugins
      # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
      # information on the format
      # auth:
      #   keys:
      #     - secret: ${BACKEND_SECRET}
      baseUrl: http://localhost:7007
      listen:
        port: 7007
        # Uncomment the following host directive to bind to specific interfaces
        # host: 127.0.0.1
      csp:
        connect-src: ["'self'", 'http:', 'https:']
        # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
        # Default Helmet Content-Security-Policy values can be removed by setting the key to false
      cors:
        origin: http://localhost:8080
        methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
        credentials: true
      database:
        client: pg
        connection:
          host: PARODOS_FULLNAME-postgres
          port: 5432
          user: parodos
          password: parodos
      cache:
        store: memory
      # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir
    integrations:
      github:
        - host: github.com
          # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
          # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
          token: ${GITHUB_TOKEN}
        ### Example for how to add your GitHub Enterprise instance using the API:
        # - host: ghe.example.net
        #   apiBaseUrl: https://ghe.example.net/api/v3
        #   token: ${GHE_TOKEN}
    proxy:
      ### Example for how to add a proxy endpoint for the frontend.
      ### A typical reason to do this is to handle HTTPS and CORS for internal services.
      # '/test':
      #   target: 'https://example.com'
      #   changeOrigin: true
      '/parodos':
        target: 'http://PARODOS_FULLNAME-workflow-service:8080/api/v1'
        changeOrigin: true
        redirect: follow
        cache: 'no-cache'
        headers:
          Content-Type: 'application/json'
          accept: 'application/json'
          Authorization: 'Basic dGVzdDp0ZXN0'
      '/parodos-notifications':
        target: 'http://PARODOS_FULLNAME-notification-service:8080/api/v1'
        changeOrigin: true
        redirect: follow
        cache: 'no-cache'
        headers:
          Content-Type: 'application/json'
          accept: 'application/json'
          Authorization: 'Basic dGVzdDp0ZXN0'
    # Reference documentation http://backstage.io/docs/features/techdocs/configuration
    # Note: After experimenting with basic setup, use CI/CD to generate docs
    # and an external cloud storage when deploying TechDocs for production use-case.
    # https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
    techdocs:
      builder: 'local' # Alternatives - 'external'
      generator:
        runIn: 'docker' # Alternatives - 'local'
      publisher:
        type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
    auth:
      # see https://backstage.io/docs/auth/ to learn about auth providers
      providers: {}
    scaffolder:
      # see https://backstage.io/docs/features/software-templates/configuration for software template options
    catalog:
      import:
        entityFilename: catalog-info.yaml
        pullRequestBranchName: backstage-integration
      rules:
        - allow: [Component, System, API, Resource, Location]
      locations:
        # Local example data, file locations are relative to the backend process, typically `packages/backend`
        - type: file
          target: ../../examples/entities.yaml
        # Local example template
        - type: file
          target: ../../examples/template/template.yaml
          rules:
            - allow: [Template]
        # Local example organizational data
        - type: file
          target: ../../examples/org.yaml
          rules:
            - allow: [User, Group]
        ## Uncomment these lines to add more example data
        # - type: url
        #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml
        ## Uncomment these lines to add an example org
        # - type: url
        #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
        #   rules:
        #     - allow: [User, Group]
backstage:
  backstage:
    image:
      repository: quay.io/parodos-dev/backstage-parodos
      tag: latest-openshift
    imagePullPolicy: Always
  ports:
  - name: backend
    port: 7007
    targetPort: backend
  replicas: 1
  type: ClusterIP
config:
  datasourceDriver: org.postgresql.Driver
  datasourcePassword: parodos
  datasourceUrl: jdbc:postgresql://PARODOS_FULLNAME-postgres:5432/parodos
  datasourceUsername: parodos
  notificationServerAddress: notification-service
  springProfilesActive: local
kubernetesClusterDomain: cluster.local
notificationService:
  notificationService:
    image:
      repository: quay.io/parodos-dev/notification-service
      tag: v1.0.19
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
notificationServiceConfig:
  datasourceDriver: org.postgresql.Driver
  datasourcePassword: parodos
  datasourceUrl: jdbc:postgresql://PARODOS_FULLNAME-postgres:5432/parodos
  datasourceUsername: parodos
  springProfilesActive: local
postgres:
  ports:
  - port: 5432
    targetPort: 0
  postgres:
    image:
      repository: postgres
      tag: 13.2-alpine
    imagePullPolicy: IfNotPresent
  replicas: 1
  type: ClusterIP
postgresSecretsTh27274644:
  pgdata: "/var/lib/postgresql/data/mydata"
  postgresDb: "parodos"
  postgresPassword: "parodos"
  postgresUser: "parodos"
pvc:
  postgresPvc:
    storageRequest: 8Gi
workflowService:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
  workflowService:
    image:
      repository: quay.io/parodos-dev/workflow-service
      tag: v1.0.19
    imagePullPolicy: Always
fullnameOverride: parodos-v1-0-19
