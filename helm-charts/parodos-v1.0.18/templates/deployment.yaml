apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "parodos-v1.0.18.fullname" . }}-backstage
  labels:
  {{- include "parodos-v1.0.18.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backstage.replicas }}
  selector:
    matchLabels:
      app: backstage
    {{- include "parodos-v1.0.18.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: backstage
      {{- include "parodos-v1.0.18.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - command:
        - node
        - packages/backend
        - --config
        - /app/app-config.yaml
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - secretRef:
            name: {{ include "parodos-v1.0.18.fullname" . }}-postgres-secrets-9gfg82585m
        image: {{ .Values.backstage.backstage.image.repository }}:{{ .Values.backstage.backstage.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.backstage.backstage.imagePullPolicy }}
        name: backstage
        ports:
        - containerPort: 7007
          name: backend
        resources: {}
        volumeMounts:
        - mountPath: /app/app-config.yaml
          name: app-config
          subPath: app-config.yaml
        - mountPath: /app/app-config.production.yaml
          name: app-config
          subPath: app-config.yaml
      volumes:
      - configMap:
          name: {{ include "parodos-v1.0.18.fullname" . }}-app-config-524h98c98h
        name: app-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "parodos-v1.0.18.fullname" . }}-postgres
  labels:
  {{- include "parodos-v1.0.18.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
    {{- include "parodos-v1.0.18.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: postgres
      {{- include "parodos-v1.0.18.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - secretRef:
            name: {{ include "parodos-v1.0.18.fullname" . }}-postgres-secrets-9gfg82585m
        image: {{ .Values.postgres.postgres.image.repository }}:{{ .Values.postgres.postgres.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.postgres.postgres.imagePullPolicy }}
        livenessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 15
          timeoutSeconds: 2
        name: postgres
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 15
          timeoutSeconds: 2
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: {{ include "parodos-v1.0.18.fullname" . }}-postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "parodos-v1.0.18.fullname" . }}-postgres
  labels:
  {{- include "parodos-v1.0.18.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
    {{- include "parodos-v1.0.18.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: postgres
      {{- include "parodos-v1.0.18.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - secretRef:
            name: {{ include "parodos-v1.0.18.fullname" . }}-postgres-secrets-default-th27274644
        image: {{ .Values.postgres.postgres.image.repository }}:{{ .Values.postgres.postgres.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.postgres.postgres.imagePullPolicy }}
        livenessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 15
          timeoutSeconds: 2
        name: postgres
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 15
          timeoutSeconds: 2
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: storage
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: {{ include "parodos-v1.0.18.fullname" . }}-postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "parodos-v1.0.18.fullname" . }}-notification-service
  labels:
  {{- include "parodos-v1.0.18.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: notification-service
    {{- include "parodos-v1.0.18.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: notification-service
      {{- include "parodos-v1.0.18.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - configMapRef:
            name: {{ include "parodos-v1.0.18.fullname" . }}-notification-service-config
        image: {{ .Values.notificationService.notificationService.image.repository }}:{{
          .Values.notificationService.notificationService.image.tag | default .Chart.AppVersion
          }}
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
        name: notification-service
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 4
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "parodos-v1.0.18.fullname" . }}-workflow-service
  labels:
  {{- include "parodos-v1.0.18.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: workflow-service
    {{- include "parodos-v1.0.18.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: workflow-service
      {{- include "parodos-v1.0.18.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - configMapRef:
            name: {{ include "parodos-v1.0.18.fullname" . }}-config
        image: {{ .Values.workflowService.workflowService.image.repository }}:{{ .Values.workflowService.workflowService.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.workflowService.workflowService.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
        name: workflow-service
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 25
          timeoutSeconds: 4
        resources: {}